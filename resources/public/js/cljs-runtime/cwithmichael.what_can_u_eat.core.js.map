{"version":3,"sources":["cwithmichael/what_can_u_eat/core.cljs"],"mappings":"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","names":["cwithmichael.what-can-u-eat.core/get-value","val","props__12889__auto__","clj-props__12890__auto__","uix.core/glue-args","vec__18959","map__18962","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","f__12891__auto__","js/goog.DEBUG","temp__5804__auto__","cwithmichael.what-can-u-eat.core/filter-list","f__12820__auto__","*current-component*-orig-val__18965","uix.core/*current-component*","*current-component*-temp-val__18966","cljs.core/map?","js/Error","js/Object.defineProperty","obj18968","js/window","js/window.uix","js/window.uix.dev","sig__12829__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","handle-filter-change","uix.compiler.aot/>el","uix.compiler.aot/create-uix-input","p1__18956#","G__18963","p1__18957#","G__18964","vec__18973","map__18976","cwithmichael.what-can-u-eat.core/message-view","*current-component*-orig-val__18977","*current-component*-temp-val__18978","obj18980","in-default-state?","food-name","missing-info?","can-eat?","nutrients","message","uix.compiler.attributes/interpret-attrs","net-carbs","cljs.core/first","p1__18969#","cljs.core.filter","cljs.core._EQ_","sugar","p1__18970#","choline","p1__18971#","cljs.core.not_EQ_","cljs.core/not","vec__18984","map__18987","cwithmichael.what-can-u-eat.core/search-form","*current-component*-orig-val__18992","*current-component*-temp-val__18993","obj18995","handle-submit","filters","vec__18988","query","set-query!","uix.core/use-state","uix.compiler.alpha/component-element","p1__18981#","G__18991","p1__18982#","f__12887__auto__","cwithmichael.what-can-u-eat.core/home-page","*current-component*-orig-val__19026","*current-component*-temp-val__19027","obj19029","vec__18999","vec__19002","vec__19005","vec__19008","vec__19011","vec__19014","vec__19017","set-filters!","food","set-food!","set-can-eat!","set-nutrients!","set-in-default-state!","in-loading-state?","set-in-loading-state!","set-missing-info!","check-food","food-data","ajax.core.POST","response","cljs.core.println","G__19020","G__19021","p1__18996#","cljs.core/some","G__19022","cljs.core.into","p1__18997#","G__19023","cljs.core.conj","e","ajax.core.GET","G__19024","G__19025","js/cwithmichael","js/cwithmichael.what-can-u-eat","js/cwithmichael.what-can-u-eat.core","js/cwithmichael.what-can-u-eat.core.root","cwithmichael.what-can-u-eat.core/root","uix.dom.create_root","js/document","cwithmichael.what-can-u-eat.core/init!","uix.dom/render-root"],"sourcesContent":["(ns cwithmichael.what-can-u-eat.core\n  #_{:clj-kondo/ignore [:unresolved-var]}\n  (:require\n   [ajax.core :refer [POST GET]]\n   [uix.core :refer [$ defui]]\n   [uix.dom]))\n\n(defn get-value [val] (-> val .-target .-value))\n\n;; -------------------------\n;; Views \n(defui filter-list [{:keys [handle-filter-change]}]\n  ($ :ul.filterList\n     ($ :li\n        ($ :input {:type \"checkbox\" :id \"keto\" :name \"keto\" :value \"keto\"\n                   :on-change #(handle-filter-change (get-value %))})\n        ($ :label {:for \"keto\"} \"Keto Friendly\"))\n     ($ :li\n        ($ :input {:type \"checkbox\" :id \"tmau\" :name \"tmau\" :value \"tmau\"\n                   :on-change #(handle-filter-change (get-value %))})\n        ($ :label {:htmlFor \"tmau\"} \"TMAU Friendly\"))))\n\n(defui message-view [{:keys [in-default-state? food-name missing-info? can-eat? nutrients]}]\n  (let [message (cond\n                  in-default-state? nil\n                  missing-info? ($ :span.messageTextFailure \"Missing information to determine\")\n                  can-eat? ($ :span.messageTextSuccess \"You can eat it! Just make sure to watch your total daily intake.\")\n                  :else ($ :span.messageTextFailure \"You should probably not eat it.\"))\n        net-carbs (first (filter #(= (:nutrient-id %) 1005) nutrients))\n        sugar (first (filter #(= (:nutrient-id %) 2000) nutrients))\n        choline (first (filter #(= (:nutrient-id %) 1180) nutrients))]\n    ($ :div.message\n       message\n       (when (not= nil food-name) ($ :p (str \"Food description: \" food-name)))\n       (when (and (not= nil nutrients) (not missing-info?)) ($ :div.nutrients\n                                                               (when net-carbs ($ :span.nutrient (str \"Net Carbs: \" (:value net-carbs) (:unit-name net-carbs))))\n                                                               (when sugar ($ :span.nutrient (str \"Sugars: \" (:value sugar) (:unit-name sugar))))\n                                                               (when choline ($ :span.nutrient (str \"Choline: \" (:value choline) (:unit-name choline)))))))))\n\n(defui search-form [{:keys [handle-submit filters handle-filter-change]}]\n  (let [[query set-query!] (uix.core/use-state \"\")]\n    ($ :form.searchForm\n       ($ filter-list {:filters filters :handle-filter-change handle-filter-change})\n       ($ :input.searchBar {:placeholder \"enter food\"\n                            :type \"text\"\n                            :name \"food\"\n                            :onChange #(set-query! (get-value %))})\n       ($ :button.searchButton {:type \"submit\" :on-click #(handle-submit % query)} \"Can I Eat It?\"))))\n\n(defui home-page []\n  (let [[filters set-filters!] (uix.core/use-state [])\n        [food set-food!] (uix.core/use-state nil)\n        [can-eat? set-can-eat!] (uix.core/use-state false)\n        [nutrients set-nutrients!] (uix.core/use-state nil)\n        [in-default-state? set-in-default-state!] (uix.core/use-state true)\n        [in-loading-state? set-in-loading-state!] (uix.core/use-state false)\n        [missing-info? set-missing-info!] (uix.core/use-state false)\n        check-food (fn [food-data filters]\n                     #_{:clj-kondo/ignore [:unresolved-var]}\n                     (POST \"http://localhost:3000/api/checkFood\"\n                       {:handler (fn [response]\n                                   (println response)\n                                   (set-missing-info! (:missing-info response))\n                                   (set-can-eat! (:status response)))\n                        :params {:food food-data :filters filters}}))\n        handle-filter-change (fn [val]\n                               (if (some  #(= % val)  filters)\n                                 (set-filters! (into [] (filter #(not= % val) filters)))\n                                 (set-filters! (conj filters val))))\n        handle-submit (fn [e query]\n                        (.preventDefault e)\n                        (set-in-loading-state! true)\n                        (set-in-default-state! false)\n                        #_{:clj-kondo/ignore [:unresolved-var]}\n                        (GET (str \"http://localhost:3000/api/food/\" query)\n                          {:handler (fn [response]\n                                      (set-food! (:food response))\n                                      (set-nutrients! (-> response :food :food-nutrients))\n                                      (check-food response filters)\n                                      (set-in-loading-state! false))}))]\n    ($ :div.container\n       ($ :h1.heading \"Can you eat it?\")\n       ($ search-form {:handle-submit handle-submit\n                       :filters filters\n                       :handle-filter-change handle-filter-change})\n       (if in-loading-state? ($ :p.loadingMessage \"Loading...\")\n           ($ message-view {:in-default-state? in-default-state?\n                            :food-name (:description food)\n                            :missing-info? missing-info?\n                            :can-eat? can-eat?\n                            :nutrients nutrients})))))\n\n;; -------------------------\n;; Initialize app\n\n\n(defonce root (uix.dom/create-root (.getElementById js/document \"app\")))\n\n(defn ^:export ^:dev/once init! [] (uix.dom/render-root ($ home-page) root))\n"]}